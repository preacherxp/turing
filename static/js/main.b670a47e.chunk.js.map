{"version":3,"sources":["components/MemoryTape/styles.module.scss","components/DataLoad/styles.module.scss","components/Hero/styles.module.scss","components/InstructionsTable/index.jsx","components/MemoryTape/index.jsx","components/StateRegister/index.jsx","components/DataLoad/index.jsx","components/Hero/index.jsx","components/ExamplesSelector/TuringExamples.js","components/ExamplesSelector/index.jsx","App.jsx","index.js"],"names":["module","exports","InstructionsTable","instructionsTable","alphabet","instructionsLength","length","header","Array","from","Object","keys","fill","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","map","e","idx","key","TableBody","symbol","instruction","element","symbolActions","find","action","current","className","new","next","move","generateInstructionsTable","MemoryTape","memoryTape","setStateRegister","useState","currentState","setCurrentState","state","text","message","setMessage","transformedTape","setTransformedTape","startingIndex","setStartingIndex","stopSignal","setStopSignal","currentStep","setCurrentStep","resetTuring","useEffect","Card","style","marginBottom","CardContent","display","marginRight","Typography","Select","value","onChange","Number","target","MenuItem","stateNumber","styles","classNames","tapeElement","tapeElementStarting","tapeElementCurrent","Button","disabled","variant","onClick","currentElement","currentInstruction","prev","modifyElement","color","currentIndex","autoStep","stepsAmount","marginTop","StateRegister","stateRegister","HtmlTooltip","withStyles","theme","tooltip","backgroundColor","maxWidth","fontSize","typography","pxToRem","border","Tooltip","DataLoad","handleDataUpload","filename","removeFile","dataloadWrapper","htmlFor","uploadLabel","id","type","accept","title","Fragment","m","Hero","hero","simpleTest","numberSubstractor","numberAdder","numberAdder2","ExamplesSelector","setInstructionsTable","setMemoryTape","setAlphabet","example","setExample","setInfoDescription","darkTheme","createMuiTheme","palette","App","radio","setRadio","setFilename","ThemeProvider","Grid","container","spacing","direction","alignItems","RadioGroup","row","FormControlLabel","control","Radio","label","persist","reader","FileReader","readAsText","files","onload","event","turingData","JSON","parse","result","name","document","getElementById","alert","console","log","padding","item","ReactDOM","render","StrictMode"],"mappings":"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EACNC,KAAM,KAER,CACEJ,QAAS,IACTE,IAAK,IACLC,KAAM,EACNC,KAAM,KAER,CACEJ,QAAS,IACTE,IAAK,IACLC,KAAM,EACNC,KAAM,WAOHmF,EACD,CAAC,IAAK,IAAK,IAAK,KADfA,EAEC,CACV,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KAlBSA,EAoBQ,CACjB,CACEhD,YAAa,EACb1C,cAAe,CACb,CACEG,QAAS,IACTE,IAAK,IACLC,KAAM,EACNC,KAAM,KAER,CACEJ,QAAS,IACTE,IAAK,IACLC,KAAM,EACNC,KAAM,OAIZ,CACEmC,YAAa,EACb1C,cAAe,CACb,CACEG,QAAS,IACTE,IAAK,IACLC,KAAM,EACNC,KAAM,KAER,CACEJ,QAAS,IACTE,IAAK,IACLC,KAAM,EACNC,KAAM,OAIZ,CACEmC,YAAa,EACb1C,cAAe,CACb,CACEG,QAAS,IACTE,IAAK,IACLC,KAAM,EACNC,KAAM,KAER,CACEJ,QAAS,IACTE,IAAK,IACLC,KAAM,EACNC,KAAM,OAIZ,CACEmC,YAAa,EACb1C,cAAe,CACb,CACEG,QAAS,IACTE,IAAK,IACLC,KAAM,EACNC,KAAM,KAER,CACEJ,QAAS,IACTE,IAAK,IACLC,KAAM,EACNC,KAAM,OAIZ,CACEmC,YAAa,EACb1C,cAAe,CACb,CACEG,QAAS,IACTE,IAAK,IACLC,KAAM,EACNC,KAAM,KAER,CACEJ,QAAS,IACTE,IAAK,IACLC,KAAM,EACNC,KAAM,OAIZ,CACEmC,YAAa,EACb1C,cAAe,CACb,CACEG,QAAS,IACTE,IAAK,IACLC,KAAM,EACNC,KAAM,KAER,CACEJ,QAAS,IACTE,IAAK,IACLC,KAAM,EACNC,KAAM,OAIZ,CACEmC,YAAa,EACb1C,cAAe,CACb,CACEG,QAAS,IACTE,IAAK,IACLC,KAAM,EACNC,KAAM,WAOHoF,EACD,CAAC,IAAK,IAAK,IAAK,KADfA,EAEC,CACV,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,K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","file":"static/js/main.b670a47e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"memoryTape\":\"styles_memoryTape__Xhwgb\",\"tapeElement\":\"styles_tapeElement__27PSm\",\"tapeElementStarting\":\"styles_tapeElementStarting__2qT8D\",\"tapeElementCurrent\":\"styles_tapeElementCurrent__2uCJy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dataloadWrapper\":\"styles_dataloadWrapper__1ggwd\",\"uploadLabel\":\"styles_uploadLabel__1K10l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hero\":\"styles_hero__2H9nv\"};","import React from \"react\";\r\nimport styles from \"./styles.module.scss\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nexport default function InstructionsTable({\r\n  instructionsTable,\r\n  alphabet,\r\n  ...props\r\n}) {\r\n  function generateInstructionsTable() {\r\n    const instructionsLength = instructionsTable.length;\r\n    const header = Array.from(Object.keys(Array(instructionsLength).fill(0)));\r\n    return (\r\n      <TableContainer component={Paper}>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Alphabet</TableCell>\r\n              {header.map((e, idx) => (\r\n                <TableCell key={idx}>q{e}</TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {alphabet.map((symbol, idx) => {\r\n              return (\r\n                <TableRow key={idx}>\r\n                  <TableCell>{symbol}</TableCell>\r\n\r\n                  {instructionsTable.map((instruction, idx) => {\r\n                    const element = instruction.symbolActions.find(\r\n                      (action) => action.current === symbol\r\n                    );\r\n                    if (element) {\r\n                      return (\r\n                        <TableCell key={idx}>\r\n                          <div className=\"\">\r\n                            Current element: {element.current}\r\n                          </div>\r\n                          <div className=\"\">New element: {element.new}</div>\r\n                          <div className=\"\">Next state: {element.next}</div>\r\n                          <div className=\"\">Head movement: {element.move}</div>\r\n                        </TableCell>\r\n                      );\r\n                    } else {\r\n                      return <TableCell key={idx}>-</TableCell>;\r\n                    }\r\n                  })}\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    );\r\n  }\r\n\r\n  return <div>{generateInstructionsTable()}</div>;\r\n}\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport styles from \"./styles.module.scss\";\r\nimport classNames from \"classnames\";\r\nimport {\r\n  Typography,\r\n  Card,\r\n  CardContent,\r\n  MenuItem,\r\n  Select,\r\n} from \"@material-ui/core\";\r\nimport { useEffect } from \"react\";\r\n\r\nexport default function MemoryTape({\r\n  memoryTape,\r\n  instructionsTable,\r\n  setStateRegister,\r\n  ...props\r\n}) {\r\n  const [currentState, setCurrentState] = useState(0);\r\n  const [message, setMessage] = useState({ state: false, text: \"\" });\r\n  const [transformedTape, setTransformedTape] = useState([]);\r\n  const [startingIndex, setStartingIndex] = useState(0);\r\n  const [stopSignal, setStopSignal] = useState(false);\r\n  const [currentStep, setCurrentStep] = useState(0);\r\n\r\n  function handleSelectChange(e) {\r\n    setStartingIndex(Number(e.target.value));\r\n    setCurrentStep(Number(e.target.value));\r\n  }\r\n\r\n  function setNewTape() {\r\n    resetTuring();\r\n    setTransformedTape([...memoryTape]);\r\n  }\r\n\r\n  useEffect(() => {\r\n    setNewTape();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [memoryTape]);\r\n\r\n  function runTuring() {\r\n    resetTuring();\r\n    let currentIndex = startingIndex;\r\n    let autoStep = 0;\r\n\r\n    const modifyElement = function () {\r\n      const currentElement = transformedTape[currentIndex];\r\n\r\n      const currentInstruction = instructionsTable[autoStep].symbolActions.find(\r\n        (action) => action.current === currentElement\r\n      );\r\n\r\n      if (currentInstruction?.move === \"STOP\") {\r\n        setStopSignal(true);\r\n        setMessage({ state: true, text: \"Machine finished\" });\r\n        return;\r\n      }\r\n\r\n      if (currentInstruction) {\r\n        transformedTape[currentIndex] = currentInstruction.new;\r\n        autoStep = currentInstruction.next;\r\n        if (currentInstruction.move === \"R\") currentIndex += 1;\r\n        if (currentInstruction.move === \"L\") currentIndex -= 1;\r\n\r\n        setTransformedTape(transformedTape);\r\n        setStateRegister((prev) => [\r\n          ...prev,\r\n          {\r\n            ...currentInstruction,\r\n          },\r\n        ]);\r\n      } else {\r\n        setMessage({ state: true, text: \"Instruction error\" });\r\n        setStopSignal(true);\r\n      }\r\n    };\r\n\r\n    let stepsAmount = 0;\r\n\r\n    while (\r\n      stepsAmount <= 1000 &&\r\n      currentIndex >= 0 &&\r\n      currentIndex < transformedTape.length &&\r\n      !stopSignal\r\n    ) {\r\n      if (stepsAmount < 1000) {\r\n        modifyElement();\r\n      } else {\r\n        setMessage({ state: true, text: \"Steps limit achived\" });\r\n      }\r\n      stepsAmount += 1;\r\n    }\r\n\r\n    setMessage({ state: true, text: \"Machine finished\" });\r\n  }\r\n  function nextStep() {\r\n    const modifyElement = function () {\r\n      const currentElement = transformedTape[currentStep];\r\n\r\n      const currentInstruction = instructionsTable[\r\n        currentState\r\n      ].symbolActions.find((action) => action.current === currentElement);\r\n\r\n      if (currentInstruction?.move === \"STOP\") {\r\n        setStopSignal(true);\r\n        setMessage({ state: true, text: \"Machine finished\" });\r\n        return;\r\n      }\r\n\r\n      if (currentInstruction) {\r\n        transformedTape[currentStep] = currentInstruction.new;\r\n        setCurrentState(currentInstruction.next);\r\n        if (currentInstruction.move === \"R\") setCurrentStep((prev) => prev + 1);\r\n        if (currentInstruction.move === \"L\") setCurrentStep((prev) => prev - 1);\r\n\r\n        setTransformedTape(transformedTape);\r\n        setStateRegister((prev) => [\r\n          ...prev,\r\n          {\r\n            ...currentInstruction,\r\n          },\r\n        ]);\r\n      }\r\n    };\r\n\r\n    modifyElement();\r\n  }\r\n\r\n  function resetTuring() {\r\n    setMessage({ state: false, text: \"\" });\r\n    setTransformedTape([...memoryTape]);\r\n    setCurrentState(0);\r\n    setCurrentStep(0);\r\n    setStateRegister([]);\r\n    setStopSignal(false);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Card style={{ marginBottom: 20 }}>\r\n        <CardContent style={{ display: \"flex\" }}>\r\n          <div style={{ marginRight: 8 }}>\r\n            <Typography>Starting index</Typography>\r\n            <Select value={startingIndex} onChange={handleSelectChange}>\r\n              {Object.keys(Array(memoryTape.length).fill(0)).map(\r\n                (element, idx) => (\r\n                  <MenuItem key={idx} value={element}>\r\n                    {element}\r\n                  </MenuItem>\r\n                )\r\n              )}\r\n            </Select>\r\n          </div>\r\n\r\n          <Typography style={{ marginRight: 8 }}>\r\n            Current step <br /> {currentStep}\r\n          </Typography>\r\n\r\n          <Typography>\r\n            Current state <br />\r\n            {currentState === \"STOP\"\r\n              ? \"STOP\"\r\n              : `q${instructionsTable[currentState].stateNumber}`}\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n      <Card style={{ marginBottom: 20 }}>\r\n        <CardContent>\r\n          <div className={styles.memoryTape}>\r\n            {memoryTape.map((element, idx) => {\r\n              return (\r\n                <span\r\n                  className={classNames(\r\n                    styles.tapeElement,\r\n                    idx === startingIndex && styles.tapeElementStarting,\r\n                    idx === currentStep && styles.tapeElementCurrent\r\n                  )}\r\n                  key={idx}\r\n                >\r\n                  {element}\r\n                </span>\r\n              );\r\n            })}\r\n          </div>\r\n\r\n          <div className={styles.memoryTape}>\r\n            {transformedTape.map((element, idx) => {\r\n              return (\r\n                <span\r\n                  className={classNames(\r\n                    styles.tapeElement,\r\n                    idx === startingIndex && styles.tapeElementStarting,\r\n                    idx === currentStep && styles.tapeElementCurrent\r\n                  )}\r\n                  key={idx}\r\n                >\r\n                  {element}\r\n                </span>\r\n              );\r\n            })}\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n      <Card>\r\n        <CardContent>\r\n          <Button\r\n            style={{ marginRight: \"8px\" }}\r\n            disabled={currentState === \"STOP\"}\r\n            variant=\"contained\"\r\n            onClick={nextStep}\r\n          >\r\n            Next Step\r\n          </Button>\r\n          <Button\r\n            style={{ marginRight: \"8px\" }}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={runTuring}\r\n          >\r\n            Run\r\n          </Button>\r\n          <Button\r\n            style={{ marginRight: \"8px\" }}\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            onClick={resetTuring}\r\n          >\r\n            Reset\r\n          </Button>\r\n        </CardContent>\r\n      </Card>\r\n      <div style={{ marginTop: \"20px\" }}>\r\n        <Typography variant=\"h3\" component=\"h2\" className={styles.message}>\r\n          {message.text}\r\n        </Typography>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nMemoryTape.propTypes = {\r\n  memoryTape: PropTypes.array,\r\n  instructionsTable: PropTypes.array,\r\n};\r\n","import React from \"react\";\r\nimport styles from \"./styles.module.scss\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nexport default function StateRegister({ stateRegister, ...props }) {\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Index</TableCell>\r\n            <TableCell>Current element</TableCell>\r\n            <TableCell>New element</TableCell>\r\n            <TableCell>Tape move</TableCell>\r\n            <TableCell>Next state</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {stateRegister.map((state, idx) => {\r\n            return (\r\n              <TableRow key={idx}>\r\n                <TableCell>{idx + 1}</TableCell>\r\n                <TableCell>{state.current}</TableCell>\r\n                <TableCell>{state.new}</TableCell>\r\n                <TableCell>{state.move}</TableCell>\r\n                <TableCell>{state.next}</TableCell>\r\n              </TableRow>\r\n            );\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport styles from \"./styles.module.scss\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport { Card, CardContent, Typography, Button } from \"@material-ui/core\";\r\n\r\nconst HtmlTooltip = withStyles((theme) => ({\r\n  tooltip: {\r\n    backgroundColor: \"#f5f5f9\",\r\n    color: \"rgba(0, 0, 0, 0.87)\",\r\n    maxWidth: 450,\r\n    fontSize: theme.typography.pxToRem(12),\r\n    border: \"1px solid #dadde9\",\r\n  },\r\n}))(Tooltip);\r\n\r\nexport default function DataLoad({\r\n  handleDataUpload,\r\n  filename,\r\n  removeFile,\r\n  ...props\r\n}) {\r\n  return (\r\n    <div className={styles.dataloadWrapper}>\r\n      <Card>\r\n        <CardContent>\r\n          <label htmlFor=\"file\" className={styles.uploadLabel}>\r\n            <div>Select file</div>\r\n          </label>\r\n\r\n          <input\r\n            id=\"file\"\r\n            onChange={handleDataUpload}\r\n            type=\"file\"\r\n            accept=\".json,.txt\"\r\n          />\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {filename && (\r\n        <Card>\r\n          <CardContent>\r\n            <Typography>Filename: {filename}</Typography>\r\n            <Button onClick={removeFile}>Remove</Button>\r\n          </CardContent>\r\n        </Card>\r\n      )}\r\n      <HtmlTooltip\r\n        title={\r\n          <React.Fragment>\r\n            <Typography m color=\"inherit\">\r\n              Supported json or text format\r\n            </Typography>\r\n            <Typography>memoryTape: Array[String]</Typography>\r\n            <Typography>alphabet: Array[String]</Typography>\r\n            <Typography>instructionsTable: Array[qState]</Typography>\r\n            <br />\r\n            <Typography>qState: Object = {\"{\"}</Typography>\r\n            <Typography>stateNumber: Number</Typography>\r\n            <Typography>symbolActions: Array[symbolAction]</Typography>\r\n            <Typography>{\"}\"}</Typography>\r\n            <br />\r\n            <Typography>symbolAction: Object = {\"{\"}</Typography>\r\n            <Typography>current: String</Typography>\r\n            <Typography>new: String</Typography>\r\n            <Typography>next: Number</Typography>\r\n            <Typography>move: String / exact STOP String</Typography>\r\n            <Typography>{\"}\"}</Typography>\r\n          </React.Fragment>\r\n        }\r\n      >\r\n        <Button>Help</Button>\r\n      </HtmlTooltip>\r\n    </div>\r\n  );\r\n}\r\n\r\nDataLoad.propTypes = {\r\n  handleDataUpload: PropTypes.func,\r\n};\r\n","import React from \"react\";\r\nimport styles from \"./styles.module.scss\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nexport default function Hero() {\r\n  return (\r\n    <div className={styles.hero}>\r\n      <Typography variant=\"h2\" component=\"h1\">Turing Machine Simulator</Typography>\r\n    </div>\r\n  );\r\n}\r\n","export const simpleTest = {\r\n  memoryTape: [\"-\", \"1\", \"0\", \"1\", \"1\", \"0\", \"-\"],\r\n  alphabet: [\"1\", \"0\", \"-\"],\r\n  instructionsTable: [\r\n    {\r\n      stateNumber: 0,\r\n      symbolActions: [\r\n        {\r\n          current: \"0\",\r\n          new: \"1\",\r\n          next: 1,\r\n          move: \"R\",\r\n        },\r\n        {\r\n          current: \"-\",\r\n          new: \"-\",\r\n          next: 0,\r\n          move: \"R\",\r\n        },\r\n        {\r\n          current: \"1\",\r\n          new: \"1\",\r\n          next: 0,\r\n          move: \"R\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      stateNumber: 1,\r\n      symbolActions: [\r\n        {\r\n          current: \"1\",\r\n          new: \"0\",\r\n          next: 0,\r\n          move: \"R\",\r\n        },\r\n        {\r\n          current: \"0\",\r\n          new: \"1\",\r\n          next: 0,\r\n          move: \"R\",\r\n        },\r\n        {\r\n          current: \"-\",\r\n          new: \"-\",\r\n          next: 1,\r\n          move: \"STOP\",\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n};\r\n\r\nexport const numberSubstractor = {\r\n  alphabet: [\"0\", \"-\", \"C\", \"X\"],\r\n  memoryTape: [\r\n    \"0\",\r\n    \"0\",\r\n    \"0\",\r\n    \"C\",\r\n    \"0\",\r\n    \"0\",\r\n    \"0\",\r\n    \"0\",\r\n    \"-\",\r\n    \"-\",\r\n    \"-\",\r\n    \"-\",\r\n    \"-\",\r\n    \"-\",\r\n    \"-\",\r\n    \"-\",\r\n  ],\r\n  instructionsTable: [\r\n    {\r\n      stateNumber: 0,\r\n      symbolActions: [\r\n        {\r\n          current: \"0\",\r\n          new: \"X\",\r\n          next: 1,\r\n          move: \"R\",\r\n        },\r\n        {\r\n          current: \"C\",\r\n          new: \"C\",\r\n          next: 5,\r\n          move: \"R\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      stateNumber: 1,\r\n      symbolActions: [\r\n        {\r\n          current: \"0\",\r\n          new: \"0\",\r\n          next: 1,\r\n          move: \"R\",\r\n        },\r\n        {\r\n          current: \"C\",\r\n          new: \"C\",\r\n          next: 2,\r\n          move: \"R\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      stateNumber: 2,\r\n      symbolActions: [\r\n        {\r\n          current: \"X\",\r\n          new: \"X\",\r\n          next: 2,\r\n          move: \"R\",\r\n        },\r\n        {\r\n          current: \"0\",\r\n          new: \"X\",\r\n          next: 3,\r\n          move: \"L\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      stateNumber: 3,\r\n      symbolActions: [\r\n        {\r\n          current: \"X\",\r\n          new: \"X\",\r\n          next: 3,\r\n          move: \"L\",\r\n        },\r\n        {\r\n          current: \"C\",\r\n          new: \"C\",\r\n          next: 4,\r\n          move: \"L\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      stateNumber: 4,\r\n      symbolActions: [\r\n        {\r\n          current: \"0\",\r\n          new: \"0\",\r\n          next: 4,\r\n          move: \"L\",\r\n        },\r\n        {\r\n          current: \"X\",\r\n          new: \"X\",\r\n          next: 0,\r\n          move: \"R\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      stateNumber: 5,\r\n      symbolActions: [\r\n        {\r\n          current: \"X\",\r\n          new: \"X\",\r\n          next: 5,\r\n          move: \"R\",\r\n        },\r\n        {\r\n          current: \"0\",\r\n          new: \"0\",\r\n          next: 6,\r\n          move: \"L\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      stateNumber: 6,\r\n      symbolActions: [\r\n        {\r\n          current: \"X\",\r\n          new: \"-\",\r\n          next: 6,\r\n          move: \"STOP\",\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n};\r\n\r\nexport const numberAdder = {\r\n  alphabet: [\"0\", \"C\", \"X\", \"-\"],\r\n  memoryTape: [\r\n    \"0\",\r\n    \"0\",\r\n    \"C\",\r\n    \"0\",\r\n    \"0\",\r\n    \"0\",\r\n    \"-\",\r\n    \"-\",\r\n    \"-\",\r\n    \"-\",\r\n    \"-\",\r\n    \"-\",\r\n    \"-\",\r\n    \"-\",\r\n  ],\r\n  instructionsTable: [\r\n    {\r\n      stateNumber: 0,\r\n      symbolActions: [\r\n        {\r\n          current: \"0\",\r\n          new: \"X\",\r\n          next: 1,\r\n          move: \"R\",\r\n        },\r\n        {\r\n          current: \"C\",\r\n          new: \"-\",\r\n          next: 5,\r\n          move: \"STOP\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      stateNumber: 1,\r\n      symbolActions: [\r\n        {\r\n          current: \"0\",\r\n          new: \"0\",\r\n          next: 1,\r\n          move: \"R\",\r\n        },\r\n        {\r\n          current: \"C\",\r\n          new: \"C\",\r\n          next: 2,\r\n          move: \"R\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      stateNumber: 2,\r\n      symbolActions: [\r\n        {\r\n          current: \"0\",\r\n          new: \"0\",\r\n          next: 2,\r\n          move: \"R\",\r\n        },\r\n        {\r\n          current: \"-\",\r\n          new: \"0\",\r\n          next: 3,\r\n          move: \"L\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      stateNumber: 3,\r\n      symbolActions: [\r\n        {\r\n          current: \"0\",\r\n          new: \"0\",\r\n          next: 3,\r\n          move: \"L\",\r\n        },\r\n        {\r\n          current: \"C\",\r\n          new: \"C\",\r\n          next: 4,\r\n          move: \"L\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      stateNumber: 4,\r\n      symbolActions: [\r\n        {\r\n          current: \"0\",\r\n          new: \"0\",\r\n          next: 4,\r\n          move: \"L\",\r\n        },\r\n        {\r\n          current: \"X\",\r\n          new: \"X\",\r\n          next: 0,\r\n          move: \"R\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      stateNumber: 5,\r\n      symbolActions: [\r\n        {\r\n          current: \"-\",\r\n          new: \"-\",\r\n          next: 5,\r\n          move: \"-\",\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n};\r\n\r\nexport const numberAdder2 = {\r\n  alphabet: [\"0\", \"C\", \"X\", \"-\"],\r\n  memoryTape: [\"0\", \"0\", \"0\", \"0\", \"C\", \"0\", \"0\", \"0\", \"-\", \"-\", \"-\", \"-\", \"-\"],\r\n  instructionsTable: [\r\n    {\r\n      stateNumber: 0,\r\n      symbolActions: [\r\n        {\r\n          current: \"0\",\r\n          new: \"X\",\r\n          next: 1,\r\n          move: \"R\",\r\n        },\r\n        {\r\n          current: \"C\",\r\n          new: \"-\",\r\n          next: 5,\r\n          move: \"STOP\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      stateNumber: 1,\r\n      symbolActions: [\r\n        {\r\n          current: \"0\",\r\n          new: \"0\",\r\n          next: 1,\r\n          move: \"R\",\r\n        },\r\n        {\r\n          current: \"C\",\r\n          new: \"C\",\r\n          next: 2,\r\n          move: \"R\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      stateNumber: 2,\r\n      symbolActions: [\r\n        {\r\n          current: \"0\",\r\n          new: \"0\",\r\n          next: 2,\r\n          move: \"R\",\r\n        },\r\n        {\r\n          current: \"-\",\r\n          new: \"0\",\r\n          next: 3,\r\n          move: \"L\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      stateNumber: 3,\r\n      symbolActions: [\r\n        {\r\n          current: \"0\",\r\n          new: \"0\",\r\n          next: 3,\r\n          move: \"L\",\r\n        },\r\n        {\r\n          current: \"C\",\r\n          new: \"C\",\r\n          next: 4,\r\n          move: \"L\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      stateNumber: 4,\r\n      symbolActions: [\r\n        {\r\n          current: \"0\",\r\n          new: \"0\",\r\n          next: 4,\r\n          move: \"L\",\r\n        },\r\n        {\r\n          current: \"X\",\r\n          new: \"X\",\r\n          next: 0,\r\n          move: \"R\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      stateNumber: 5,\r\n      symbolActions: [\r\n        {\r\n          current: \"-\",\r\n          new: \"-\",\r\n          next: 5,\r\n          move: \"-\",\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\n\r\nimport {\r\n  numberSubstractor,\r\n  numberAdder,\r\n  numberAdder2,\r\n  simpleTest,\r\n} from \"./TuringExamples\";\r\nimport { Select, MenuItem, Button } from \"@material-ui/core\";\r\n\r\nconst HtmlTooltip = withStyles((theme) => ({\r\n  tooltip: {\r\n    backgroundColor: \"#f5f5f9\",\r\n    color: \"rgba(0, 0, 0, 0.87)\",\r\n    maxWidth: 450,\r\n    fontSize: theme.typography.pxToRem(12),\r\n    border: \"1px solid #dadde9\",\r\n  },\r\n}))(Tooltip);\r\n\r\nexport default function ExamplesSelector({\r\n  setInstructionsTable,\r\n  setMemoryTape,\r\n  setAlphabet,\r\n  ...props\r\n}) {\r\n  const [example, setExample] = useState(\"numberSubstractor\");\r\n\r\n  useEffect(() => {\r\n    setInstructionsTable(numberSubstractor.instructionsTable);\r\n    setMemoryTape(numberSubstractor.memoryTape);\r\n    setAlphabet(numberSubstractor.alphabet);\r\n  }, [setAlphabet, setInstructionsTable, setMemoryTape]);\r\n\r\n  function setInfoDescription() {\r\n    switch (example) {\r\n      case \"simpleTest\":\r\n        return <React.Fragment>Simple test</React.Fragment>;\r\n      case \"numberSubstractor\":\r\n        return (\r\n          <React.Fragment>\r\n            A number is represented in binary format in different finite\r\n            automatas like 5 is represented as (101) but in case of subtraction\r\n            Turing Machine unary format is followed . In unary format a number\r\n            is represented by either all ones or all zeros. For example, 5 will\r\n            be represented by a sequence of five ones 5 = 1 1 1 1 1 or 0 0 0 0\r\n            0.\r\n            <br />\r\n            Lets use zeros for representation. For subtraction of numbers using\r\n            a Turing Machine, both these numbers are given as input to the\r\n            Turing machine separated by a “c”.\r\n          </React.Fragment>\r\n        );\r\n      case \"numberAdder\":\r\n        return (\r\n          <React.Fragment>\r\n            A number is represented in binary format in different finite\r\n            automatas like 5 is represented as (101) but in case of addition\r\n            using a turing machine unary format is followed. In unary format a\r\n            number is represented by either all ones or all zeroes.\r\n            <br />\r\n            For example, 5 will be represented by a sequence of five zeroes or\r\n            five ones. 5 = 1 1 1 1 1 or 0 0 0 0 0. Lets use zeroes for\r\n            representation. For adding 2 numbers using a Turing machine, both\r\n            these numbers are given as input to the Turing machine separated by\r\n            a “c”.\r\n          </React.Fragment>\r\n        );\r\n      case \"numberAdder2\":\r\n        return (\r\n          <React.Fragment>\r\n            A number is represented in binary format in different finite\r\n            automatas like 5 is represented as (101) but in case of addition\r\n            using a turing machine unary format is followed. In unary format a\r\n            number is represented by either all ones or all zeroes.\r\n            <br />\r\n            For example, 5 will be represented by a sequence of five zeroes or\r\n            five ones. 5 = 1 1 1 1 1 or 0 0 0 0 0. Lets use zeroes for\r\n            representation. For adding 2 numbers using a Turing machine, both\r\n            these numbers are given as input to the Turing machine separated by\r\n            a “c”.\r\n          </React.Fragment>\r\n        );\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  function handleChange(e) {\r\n    setExample(e.target.value);\r\n    switch (e.target.value) {\r\n      case \"simpleTest\":\r\n        setInstructionsTable(simpleTest.instructionsTable);\r\n        setMemoryTape(simpleTest.memoryTape);\r\n        setAlphabet(simpleTest.alphabet);\r\n        break;\r\n      case \"numberSubstractor\":\r\n        setInstructionsTable(numberSubstractor.instructionsTable);\r\n        setMemoryTape(numberSubstractor.memoryTape);\r\n        setAlphabet(numberSubstractor.alphabet);\r\n        break;\r\n      case \"numberAdder\":\r\n        setInstructionsTable(numberAdder.instructionsTable);\r\n        setMemoryTape(numberAdder.memoryTape);\r\n        setAlphabet(numberAdder.alphabet);\r\n        break;\r\n      case \"numberAdder2\":\r\n        setInstructionsTable(numberAdder2.instructionsTable);\r\n        setMemoryTape(numberAdder2.memoryTape);\r\n        setAlphabet(numberAdder2.alphabet);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <Select value={example} onChange={handleChange}>\r\n        <MenuItem value={\"simpleTest\"}>Simple test</MenuItem>\r\n        <MenuItem value={\"numberSubstractor\"}>Number substractor</MenuItem>\r\n        <MenuItem value={\"numberAdder\"}>Number adder</MenuItem>\r\n        <MenuItem value={\"numberAdder2\"}>Number adder 2</MenuItem>\r\n      </Select>\r\n      <HtmlTooltip title={setInfoDescription()}>\r\n        <Button>Info</Button>\r\n      </HtmlTooltip>\r\n    </div>\r\n  );\r\n}\r\n\r\nExamplesSelector.propTypes = {\r\n  setInstructionsTable: PropTypes.func,\r\n  setMemoryTape: PropTypes.func,\r\n  setAlphabet: PropTypes.func,\r\n};\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport InstructionsTable from \"./components/InstructionsTable\";\r\nimport MemoryTape from \"./components/MemoryTape\";\r\nimport StateRegister from \"./components/StateRegister\";\r\nimport DataLoad from \"./components/DataLoad\";\r\nimport Hero from \"./components/Hero\";\r\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\r\nimport { Grid, Radio, RadioGroup, FormControlLabel } from \"@material-ui/core\";\r\nimport ExamplesSelector from \"./components/ExamplesSelector\";\r\nconst darkTheme = createMuiTheme({\r\n  palette: {\r\n    type: \"dark\",\r\n  },\r\n});\r\n\r\nfunction App() {\r\n  const [radio, setRadio] = useState(\"example\");\r\n  const [instructionsTable, setInstructionsTable] = useState(null);\r\n  const [memoryTape, setMemoryTape] = useState(null);\r\n  const [alphabet, setAlphabet] = useState(null);\r\n  const [stateRegister, setStateRegister] = useState([]);\r\n  const [filename, setFilename] = useState(\"\");\r\n\r\n  function removeFile() {\r\n    setInstructionsTable([]);\r\n    setMemoryTape(null);\r\n    setAlphabet(null);\r\n    setFilename(\"\");\r\n  }\r\n\r\n  function handleDataUpload(e) {\r\n    e.persist();\r\n    const reader = new FileReader();\r\n    reader.readAsText(e.target.files[0]);\r\n\r\n    reader.onload = function (event) {\r\n      try {\r\n        const turingData = JSON.parse(event.target.result);\r\n        const { instructionsTable, memoryTape, alphabet } = turingData;\r\n        if (instructionsTable && memoryTape && alphabet) {\r\n          setFilename(e.target.files[0].name);\r\n          setInstructionsTable(instructionsTable);\r\n          setMemoryTape(memoryTape);\r\n          setAlphabet(alphabet);\r\n        } else {\r\n          document.getElementById(\"file\").value = null;\r\n          alert(\"wrong file format\");\r\n        }\r\n      } catch (e) {\r\n        console.log(e);\r\n        document.getElementById(\"file\").value = null;\r\n        alert(\"wrong file format\");\r\n      }\r\n    };\r\n  }\r\n\r\n  function handleChange(e) {\r\n    setRadio(e.target.value);\r\n    setInstructionsTable([]);\r\n    setMemoryTape(null);\r\n    setAlphabet(null);\r\n    setFilename(\"\");\r\n  }\r\n\r\n  return (\r\n    <ThemeProvider theme={darkTheme}>\r\n      <Grid container spacing={2} direction=\"column\" alignItems=\"center\">\r\n        <Hero />\r\n        <RadioGroup row value={radio} onChange={handleChange}>\r\n          <FormControlLabel\r\n            value=\"example\"\r\n            control={<Radio />}\r\n            label=\"Example machines\"\r\n          />\r\n          <FormControlLabel\r\n            value=\"file\"\r\n            control={<Radio />}\r\n            label=\"Import from file (.json/.txt)\"\r\n          />\r\n        </RadioGroup>\r\n\r\n        {radio === \"example\" && (\r\n          <ExamplesSelector\r\n            setInstructionsTable={setInstructionsTable}\r\n            setMemoryTape={setMemoryTape}\r\n            setAlphabet={setAlphabet}\r\n          />\r\n        )}\r\n        {radio === \"file\" && (\r\n          <DataLoad\r\n            handleDataUpload={handleDataUpload}\r\n            filename={filename}\r\n            removeFile={removeFile}\r\n          />\r\n        )}\r\n\r\n        <Grid\r\n          style={{ padding: 20 }}\r\n          item\r\n          container\r\n          spacing={2}\r\n          direction=\"column\"\r\n        >\r\n          {instructionsTable && alphabet && (\r\n            <InstructionsTable\r\n              instructionsTable={instructionsTable}\r\n              alphabet={alphabet}\r\n            />\r\n          )}\r\n        </Grid>\r\n\r\n        {memoryTape && (\r\n          <Grid\r\n            style={{ padding: 20 }}\r\n            spacing={2}\r\n            item\r\n            container\r\n            direction=\"column\"\r\n          >\r\n            <MemoryTape\r\n              memoryTape={memoryTape}\r\n              instructionsTable={instructionsTable}\r\n              setStateRegister={setStateRegister}\r\n            />\r\n          </Grid>\r\n        )}\r\n        {stateRegister.length ? (\r\n          <Grid\r\n            style={{ padding: 20 }}\r\n            spacing={2}\r\n            item\r\n            container\r\n            direction=\"column\"\r\n          >\r\n            <StateRegister stateRegister={stateRegister} />\r\n          </Grid>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </Grid>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App.jsx\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}